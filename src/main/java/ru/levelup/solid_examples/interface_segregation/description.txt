Interface segregation - это предоставление каждому клиенту минимального (в идеале - отдельного) интерфейса.

Используя интерфейс Bird, наследующие его классы получат ненужные методы (более того - методы, которые они не умеют
исполнять). При декомпозиции и использовании более конкретных типов (Swimmable, Runnable, Flying, Speakable)
имплементирующие их классы будут обладать набором только необходимых и характеризующих их методов.